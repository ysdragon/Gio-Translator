name: Build Linux

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Update dependencies
        run: sudo apt-get update

      - name: Install specific dependencies
        run: sudo apt install gcc pkg-config libwayland-dev libx11-dev libx11-xcb-dev libxkbcommon-x11-dev libgles2-mesa-dev libegl1-mesa-dev libffi-dev libxcursor-dev libvulkan-dev

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.5

      - name: Build Linux
        run: |
          echo "Building Linux amd64..."
          export TAG_NAME="${{ github.event.release.tag_name }}"
          export ARCH="amd64"
          CGO_ENABLED=1 GOOS=linux GOARCH=$ARCH go build -o ./dist/$ARCH/Gio-Translator .
          cp ./LICENSE ./dist/$ARCH
          tar -cJf ./dist/Gio-Translator-linux-$TAG_NAME-$ARCH.tar.xz --directory=./dist/$ARCH Gio-Translator ./LICENSE
          rm -rf ./dist/$ARCH

      - name: Upload Release Asset
        run: |
          export TAG_NAME="${{ github.event.release.tag_name }}"
          export REF_NAME="${{ github.ref_name }}"
          gh release upload $TAG_NAME ./dist/Gio-Translator-linux-$REF_NAME-amd64.tar.xz
        env:
          GH_TOKEN: ${{ github.token }}

  build_riscv64_arm64:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu_latest
          - arch: riscv64
            distro: ubuntu_latest

    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}

          setup: |
            mkdir -p "${PWD}/dist/${{ matrix.arch }}"

          dockerRunArgs: |
            --volume "${PWD}/dist/${{ matrix.arch }}:/dist/${{ matrix.arch }}"

          env: |
            artifact_name: Gio-Translator-${{ github.event.release.tag_name }}-${{ matrix.arch }}

          shell: /bin/sh

          install: |
            apt-get update -q -y
            apt-get -q -y install wget gcc pkg-config libwayland-dev libx11-dev libx11-xcb-dev libxkbcommon-x11-dev libgles2-mesa-dev libegl1-mesa-dev libffi-dev libxcursor-dev libvulkan-dev

            if [ "${{ matrix.arch }}" = "aarch64" ]; then
                wget https://go.dev/dl/go1.22.5.linux-arm64.tar.gz
                tar -C /usr/local -xzf go1.22.5.linux-arm64.tar.gz
                export PATH=$PATH:/usr/local/go/bin
            elif [ "${{ matrix.arch }}" = "riscv64" ]; then
                wget https://go.dev/dl/go1.22.5.linux-riscv64.tar.gz
                tar -C /usr/local -xzf go1.22.5.linux-riscv64.tar.gz
                export PATH=$PATH:/usr/local/go/bin
            fi
            
          run: |
            echo "Building for ${{ matrix.arch }}..."
            export PATH=$PATH:/usr/local/go/bin
            CGO_ENABLED=1 GOOS=linux GOARCH=${{ matrix.arch }} go build -o /dist/${{ matrix.arch }}/Gio-Translator .
            cp LICENSE /dist/${{ matrix.arch }}
            tar -cJf /dist/Gio-Translator-linux-${{ github.event.release.tag_name }}-${{ matrix.arch }}.tar.xz --directory=/dist/${{ matrix.arch }}/ Gio-Translator ./LICENSE
      - name: Upload Release Asset
        run: |
          gh release upload ${{ github.event.release.tag_name }} ${PWD}/dist/Gio-Translator-linux-${{ github.event.release.tag_name }}-${{ matrix.arch }}.tar.xz
        env:
          GH_TOKEN: ${{ github.token }}
